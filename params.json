{"name":"CS-1-Web","tagline":"Documentation for the CS 1 Web repository.","body":"# Welcome to the CS 1 Capstone project\r\nBelow is documentation for the project.\r\n\r\nBut first for any documentation writers out there, a little bit of Github pages magic...\r\n\r\n```\r\nOpen and close code blocks like this with (remove single quotes)\r\n'```'\r\n[Code here]\r\n'```'\r\n```\r\n\r\n# JS files\r\n### CodeMirror\r\nProvided documentation below.\r\nhttp://codemirror.net/doc/manual.html\r\n\r\n### C-Like\r\nThe clike.js file is an implemented mode for CodeMirror that attempts to make sense of any \"C-like\" languages detected, to the best of its abilities. Provided documentation below.\r\nhttp://codemirror.net/mode/clike/ <n>\r\nhttp://codemirror.net/doc/manual.html#modeapi (More on CodeMirror \"modes\")\r\n\r\n### Python\r\nThe python.js file is the implemented mode for CodeMirror that interprets the python language. Provided documentation below.\r\nhttp://codemirror.net/mode/python/\r\n\r\n### jQuery\r\njQuery and jQuery UI are popular JavaScript libraries with a multitude of features and documentation provided below.\r\nhttp://api.jquery.com/ (More relevant documentation coming soon)\r\n\r\n### Animated Collapse\r\nThe animatedcollapse.js file is a seperate add-on that uses the jQuery library. Dynamic Drive provides some documentation below.\r\nhttp://www.dynamicdrive.com/dynamicindex17/animatedcollapse.htm\r\n\r\n-------------------------------------------------------------------------------------------------------\r\n#Travis\r\n\r\n##Student Directory \r\n\r\n###mycourses.php\r\n\r\nHome page for the student when he/she logs on.  It first queries for classes from the classes table that the current student has and is put in an outer loop that displays the classes the student is in.  Then there is a query for an inner loop that displays each assignment within that class from the assignment table.  Finally a link is displayed for each assignment to be able to perform the assignment\r\n\r\n###submission.php\r\n\r\nFirst thing that happens is a query is run to gather every column of the assignment table which is displayed to give details of the assignment.  \r\n\r\n** At this point, this is where I want to change the logic of how to compile the c++ program **\r\n\r\nThe assignment code is displayed from the assignment table info queried earlier.  Below that the input is given for the student to predict what the answer will be.  the form is then sent to results.php\r\n\r\n###results.php\r\nFirst a query is ran to get the current assignment id info from the assignment table.  It is then compared to see if the program is c++ or python and then executes it and saves it to a text file.\r\n\r\n**Again I have a different way of doing this**\r\n\r\nThey then compare it to the correct answer.  If it's right they insert it into submit table.  If not, it displays that it's not correct and asks if we wish to go to the debugger and then submits wrong answer to submission table.\r\n\r\n###viewsubmissions.php\r\n\r\nIt first queries for certain submission id for certain student and displays info.  It then cycles through all the submissions, with number of attempts, including success and failures \r\n\r\n## Instructor Directory\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}